version: 2.1

orbs:
  aws-s3: circleci/aws-s3@3.0.0

defaults: &defaults
  environment:
    CIRCLE_ARTIFACTS: /tmp/circleci-aritifacts
    CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
  resource_class: small
  docker:
    # https://circleci.com/docs/ja/2.0/executor-types/#using-multiple-docker-images
    # すべてのステップが実行されるプライマリ コンテナ イメージ
    - image: springmt/amazon-linux2-ruby:2.7
      environment:
        RAILS_ENV: test
        APP_STAGE: circleci
    - image: circleci/mysql:5.7
      environment:
        MYSQL_USER: user
        MYSQL_PASSWORD: password
        MYSQL_DATABASE: ecs_rails_sample_test

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: install dockerize
          command: yum install wget -y && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - restore_cache:
          keys:
            - ecs-rails-sample-{{ checksum "Gemfile.lock" }}
      - run:
          command: bundle -j4 --path=vendor/bundle
      - save_cache:
          key: /ecs-rails-sample-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: rubocop
          command: bundle exec rubocop
      - run:
          name: Wait for db
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          command: RAILS_ENV=test bundle exec ridgepole -c config/stage_settings/circleci/database.yml -f db/Schemafile -E test --apply
      - run:
          command: BUNDLE_PATH=vendor/bundle BUNDLE_GEMFILE=Gemfile bundle exec rspec --format RspecJunitFormatter -o $CIRCLE_TEST_REPORTS/rspec.xml --format progress
      - store_test_results:
          path:  /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-aritifacts

  cron-run:
    resource_class: small
    docker:
      - image: ghcr.io/kesin11/ci_analyzer:v4
    steps:
      - checkout
      - restore_cache:
          name: Restore last run store files
          keys:
            - cache-${CACHE_VERSION}-
      - run:
          name: Run CIAnalyzer
          command: ci_analyzer -c ci_analyzer_circleci.yaml
          environment:
            GIIHUB_TOKEN: $GITHUB_TOKEN
            CIRCLECI_TOKEN: $CIRCLECI_TOKEN
      - persist_to_workspace:
          root: /tmp
          paths:
            - ci_analyzer_output
      - store_artifacts:
          name: Store local_exporter output files
          path: /tmp/ci_analyzer_output
      - save_cache:
          name: Save last run store files
          key: cache-${CACHE_VERSION}-{{ .BuildNum }}
          paths:
            - .ci_analyzer
  sync_s3:
    resource_class: small
    docker:
      - image: 'cimg/python:3.6'
    steps:
      - attach_workspace:
          at: ./
      - aws-s3/sync:
          from: ci_analyzer_output
          to: s3://ci-analyzer-springmt/ecs-rails-sample/


workflows:
  version: 2
  test_and_build:
    jobs:
      - test:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore:
                - gh-pages

  ci_analyzer:
    jobs:
      - cron-run:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore:
                - gh-pages
      - sync_s3:
          requires:
            - cron-run

